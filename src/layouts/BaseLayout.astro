---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

import { SITE } from '../config';

interface Props {
  title: string;
  description?: string;
}

const { title, description = SITE.description } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <title>{title} | {SITE.title}</title>
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Merriweather:wght@400;700&family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)">
    <meta name="theme-color" content="#111827" media="(prefers-color-scheme: dark)">
</head>
<body class="bg-background dark:bg-primary text-primary dark:text-background min-h-screen flex flex-col transition-colors duration-300">
    <Header />
    <main class="flex-grow">
      <slot />
    </main>
    <Footer />

    <script>
      // Lógica de tema y menú móvil
      document.addEventListener('DOMContentLoaded', () => {
        const themeToggle = document.getElementById('theme-toggle');
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        const mobileMenu = document.getElementById('mobile-menu');

        // Función para actualizar los iconos del tema
        function updateThemeIcon(isDark) {
          if (!themeToggle) return;
          
          const icons = themeToggle.querySelectorAll('svg');
          if (icons.length >= 2) {
            // Mostrar icono de sol para modo claro, luna para oscuro
            icons[0].classList.toggle('hidden', !isDark); // Icono de sol
            icons[1].classList.toggle('hidden', isDark);  // Icono de luna
          }
        }

        // Aplica el tema inicial
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        let isDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
        if (isDark) {
          document.documentElement.classList.add('dark');
        }
        updateThemeIcon(isDark);

        // Toggle del tema al hacer clic
        if (themeToggle) {
          themeToggle.addEventListener('click', () => {
            isDark = document.documentElement.classList.toggle('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            updateThemeIcon(isDark);
          });
        }
        
        // Lógica del menú móvil
        if (mobileMenuBtn && mobileMenu) {
          mobileMenuBtn.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
          });
        }

        // Escuchar cambios del sistema
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
          if (!localStorage.getItem('theme')) {
            isDark = e.matches;
            document.documentElement.classList.toggle('dark', isDark);
            updateThemeIcon(isDark);
          }
        });
      });
    </script>
</body>
</html>